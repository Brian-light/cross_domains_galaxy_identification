Format of the presentation. Same as in the case of midterm presentations; your presentation is 20 minutes (~4-5 min per person depending on the size of the team) followed by 10 minutes for discussion. In the discussion segment you address questions from your audience (me and those classmates of yours who dial in to the Zoom session). Your findings are a part of the course material for the entire class so your Zoom presentation will be recorded and made available to your classmates through Teams. You do not have to share video but of course it is more natural to see the speaker so you are more than welcome to share your video during the presentation.
 
Content of the presentation: For the final presentation you have more freedom to choose how you structure your slide deck. This is specially the case because different projects may require focus on different pieces. Nevertheless, all group members should be ready to answer any relevant theoretical or practical questions regarding the project. You should also make sure your presentation includes:
 
(1) A review of the problem investigated in your project paper: Do not assume your audience remembers the notation used in the paper or your midterm presentation. You should review what you need to make sure your presentation is comprehensible and easy to follow.
 
(2) The parts of the results of the paper you decided to reproduce and briefly mention the parts you avoided reproducing: The results you present have to be consistent with the plan you presented in the midterm. If in special circumstances your project plan and/or deliverables have been updated, you should explicitly mention this and provide justifications.
 
(3) Explanation of what your group has done: Dedicate most of your time to this. Show us the results (in forms of figures, diagrams, tables, etc.), and explain what exactly we are looking at (see Remark 1 below). You also have to compare your results to the results of the paper. For example, if your diagram has a counterpart in the paper, I suggest showing both to us side-by-side or in the way you see most fit to allow us compare the two studies. You then discuss whether you have managed to successfully reproduce the numerical results and conclusions of the paper or not and provide justifications (see Remark 2 below).
 
(4) Draw conclusions from your results. Explain what your results mean and what are the resultant answers to the questions asked and investigated in the paper.
 
(5) Outlook: Think about, discuss in your team, and include in the presentation the next steps you see as future directions of research from were your work finishes. What did you leave as an important question to be answered? What new questions did your research raise for you?
 

Your project deliverables. These are the material you submit for the final assessment:
(1) Your slide deck: Remember to send me your slides (both source and pdf) before your presentation starts via email.
(2) Your Github repository: Please invite me to your project code repository. Only your last commit to the master branch of your repository before your presentation time is taken into account for code correctness but merged branches will be taken into account to evaluate contributions of the group members to the code base. See Remarks 3 and 4 below for further details.
 
Note: Github invitations expire very fast so please invite me again if you've already done so. Please also invite me again to your homework repository in case I've missed to accept the invitation.
 

Remark 1 (Explain your results with details). Review the ML algorithms and techniques used and implemented in the project. Present the details on network architectures used, datasets generated or collected, numerical results achieved, and how they have been presented in your tables, figures, diagrams, etc. You should mention details such as different network sizes, different choices or methods of search for hyperparameters, and alike. To make the most out of your 20 minutes, you may leave some of such details to appendix slides (see Remark 5) and refer the audience to them for further details. But you should be prepared to speak to those appendix slides if you were asked questions about them.
 
Remark 2 (Justifications and interpretations of results). All project papers have been published in peer reviewed journals. Therefore, they have been scrutinized by multiple anonymous referees, as well as the scientific community, and the authors themselves. While this increases our confidence in the published results, it is not a firm guarantee of correctness of them. The broad ML community has placed many mechanism (e.g., some journals nowadays mandate the source codes of results to be shared publicly and referred to by the paper so that the community, like you guys, can confirm successful reproducibility of the results). The computational physics community, however, is still to catch up on these practices. Therefore, there is still a substantial chance that some published results are generated based on faulty numerical experiments, buggy software codes, or incomplete information or methodologies. As such, it is crucial that you make sure you remain objective in your investigations and keep an impartial open mind about them. If your results do not match that of the paper, double check your work and do additional code reviews. If your results still don't match that of the paper, then maybe you are right! Do not jeopardize integrity of your research; instead make sure you have answers to the why's and how's of your findings. Think about your results and find explanations and solid justifications for your observations, independent of whether they confirm the results of the paper or challenge them.
 
Remark 3 (Code quality and documentation). Like in your assignments make sure your Github repository is well-documented, and avoid dummy files, commented out and deprecated code scripts, etc. Your repository should be easy to navigate in and your readme.md files should clearly explain the structure of the repository. The last commit before your presentation time slot in the master branch is used to assess your project code. The commit history of your repository (including merged commits from other branches to the master) will be used to assess contributions from all project members.
 
Remark 4 (Code correctness). Make very very sure that you do not have bugs in your code. Do your very best to make sure your code is correct. Validate different modules using independent unit tests and perform frequent code reviews. I encourage you to think and read about software developments practices (e.g., check out this article, references therein, and/or similar and beyond material).

Remark 5 (Optional back-up slides). Since it is possible that your presentation does not give you time to talk about all details of what you have done, you may generate supplementary slides to provide that information.
 

Some tips. Y'all did fantastic in your midterm presentations and the presentations got better and better through the midterm week. To keep that momentum going, I encourage you to take running dry-runs of your presentation seriously to:
(a) practice your timing: Since we will be on a tight schedule I'd have to stop the presentation if you run out of time and we won't get to hear about all of the hard work you've put into your project; and,
(b) avoid a monotonic tone in your speech: I realize that you might want to have notes to help you but try avoiding simply reading off of your notes. I'd need to assess how deeply you've understood the content of your presentation and if you simply read from a script it will make that assessment more difficult.
Building on the last point, your main objective should be to make sure all group-mates have understood the technical aspects of the work very well. So make sure you ask questions from each other and learn what each teammate did in details (concepts, ideas, theory, and the experiments)